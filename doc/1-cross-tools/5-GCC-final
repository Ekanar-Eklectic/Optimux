# Cross-Tools: GCC Final
# Build and install as oml

# Additional sources to add as GCC requires them 
xz -cd ../pkgs/mpfr-4.1.0.tar.xz | tar -xf -
mv -v mpfr-4.1.0 mpfr
xz -cd ../pkgs/gmp-6.2.1.tar.xz | tar -xf -
mv -v gmp-6.2.1 gmp
gunzip -cd ../pkgs/mpc-1.2.1.tar.gz | tar -xf -
mv -v mpc-1.2.1 mpc
tar xf ../pkgs/isl-0.24.tar.xz
mv -v isl-0.24 isl

# Apply patches for MUSL support
bash ../patches/gcc-alpine/apply_patches_ct.sh 

# Build in a dedicated build directory
mkdir build && cd  build

# Enable LTO
export  XTRA="--enable-lto "
#export XTRA+="--with-plugin-ld=/cross-tools/x86_64-optimux-linux-musl/bin/ld "
# link plugin? This GCC still wont compile with -flto BUT should be able to build binaries with -flto
#ln -sv  ../../libexec/gcc/x86_64-optimux-linux-musl/11.2.0/liblto_plugin.so /cross-tools/lib/bfd-plugins/liblto_plugin.so

# Turn off features
export  OFFF="--disable-symvers " 
export OFFF+="--disable-libsanitizer "
export OFFF+="--disable-libssp "
export OFFF+="--disable-multilib "
#export OFFF+="--disable-lto-plugin "

# Set the build
export  BCONF="--build=${OML_HOST} "
export BCONF+="--host=${OML_HOST} "
export BCONF+="--target=${OML_TARGET} "

# Enable graphite
export GON="--with-ppl --with-cloog "

# Configure source
AR=ar LDFLAGS="-Wl,-rpath,/cross-tools/lib" \
../configure $BCONF \
    --prefix=/cross-tools \
    --with-sysroot=/cross-tools \
    --disable-nls \
    --enable-shared \
    --enable-languages=c,c++ \
    --enable-threads=posix \
    --enable-clocale=generic \
    --enable-libstdcxx-time \
    --enable-fully-dynamic-string \
    --with-pkgversion="Optimux-CT 1.0.0 Final" $XTRA $GON $OFFF

# Build
make AS_FOR_TARGET="${OML_TARGET}-as" \
    LD_FOR_TARGET="${OML_TARGET}-ld"

# Install
make install
unset BCONF XTRA OFFF GON CFLAGS CXXFLAGS LDFLAGS 
